kormap1=read.RDS("koemap1.RDS")
kormap1=readRDS("koemap1.RDS")
kormap1=readRDS("kormap1.RDS")
kormap1=readRDS("kormap1.RDS")
kormap2=readRDS("kormap2.RDS")
kormap3=readRDS("kormap3.RDS")
tbc=readRDS("tbc.RDS")
require(tmap)
qtm(tbc)
qtm(kormap1)
qtm(kormap1,"총인구_명")
devtools::use_data(kormap1)
devtools::use_data(kormap2)
devtools::use_data(kormap3)
areacode=read.csv("areacode.csv")
devtools::use_data(areacode)
devtools::use_data(tbc)
tools::checkRdaFiles()
tools::checkRdaFiles("data/*rda")
tools::checkRdaFiles("data/*.rda")
submap(kormap2,"부산")
source('~/ownCloud/Documents/Kormaps/R/Shape.R', echo=TRUE)
submap(kormap2,"부산")
qtm(submap(kormap2,"부산"))
class(kormap1)
str(areacode)
str(tbc)
colnames(tbc)[2:14]=paste0("0",colnames(tbc)[2:14])
str(tbc)
tbc=readRDS("tbc.RDS")
str(tbc)
colnames(tbc)[2:14]=paste0("Y",colnames(tbc)[2:14])
str(tbc)
devtools::use_data(tbc)
devtools::use_data(tbc,overwrite=TRUE)
class(kormap1)
str(kormap1@data)
korpopmap1=readRDS("kormap1.RDS")
korpopmap2=readRDS("kormap2.RDS")
korpopmap3=readRDS("kormap3.RDS")
kormap1=readRDS("level1.map")
kormap2=readRDS("level2.map")
kormap3=readRDS("level3.map")
class(kormap1)
str(kormap1@data)
korpopmap1=readRDS("kormap1.RDS")
korpopmap2=readRDS("kormap2.RDS")
korpopmap3=readRDS("kormap3.RDS")
kormap1=readRDS("level1.map")
kormap2=readRDS("level2.map")
kormap3=readRDS("level3.map")
devtools::use_data(kormap1)
devtools::use_data(kormap2)
devtools::use_data(kormap3)
devtools::use_data(korpopmap1)
devtools::use_data(korpopmap2)
devtools::use_data(korpopmap3)
qtm(korpopmap3,"총인구_명")
qtm(kormap3)
qtm(korpopmap3,"총인구_명")
length(korpopmap1)
length(korpopmap2)
length(korpopmap3)
library(Kormaps)
qtm(kormap1)
qtm(korpopmap1,"총인구_명")
devtools::use_testthat()
library(Kormaps)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
"korpopmap1"
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(Kormaps)
devtools::use_vignette("Introduction to Kormaps package")
devtools::install_github("cardiomoon/Kormaps")
str(kormap1@data)
require(Kormaps)
str(kormap1@data)
qtm(kormap1,"code")
require(tmap)
qtm(kormap1,"code")
qtm(kormap1,"code",text=NULL)
qtm(kormap1,"code",text=NULL)
qtm(kormap1,"code",text.col=NA)
qtm(korpopmap1,"총인구_명")
qtm(korpopmap2,"총인구_명")
qtm(submap(korpopmap2,"서울"),"총인구_명")
qtm(submap(korpopmap2,"서울"),"총인구_명")
Seoul2=submap(kormaps,"서울")
require(Kormaps)
Seoul2=submap(kormaps,"서울")
Seoul2=Kormaps::submap(kormaps,"서울")
require(Kormaps)
require(tmap)
qtm(korpopmap2,"총인구_명")
Seoul2=submap(kormaps,"서울")
qtm(submap(korpopmap2,"서울"),"총인구_명")
Seoul2=submap(korpopmaps,"서울")
Seoul2=submap(korpopmap2,"서울")
?submap
submap
submap
Kormaps::suubmap
Kormaps::submap
submap=function(map,area){
code=area2code(area)
if(is.na(code)) return(NULL)
else mydata=map[grep(paste0('^',code),map$code),]
}
Seoul2=submap(korpopmap2,"서울")
source('~/ownCloud/Documents/Kormaps/R/Shape.R', echo=TRUE)
Seoul2=submap(korpopmap2,"서울")
devtools::document()
library(Kormaps)
area2code
submap
library(Kormaps)
Seoul2=submap(korpopmap2,"서울")
qtm(Seoul2,"총인구_명")
qtm(Seoul2,"외국인_계_명")
colnames(korpopmap1@data)
qtm(submap(korpopmap3,"대구"),"아파트_호")
qtm(korpopmap1,"총인구_명")
qtm(korpopmap1,"총인구_명",text="행정구역별_읍면동")
qtm(korpopmap1,"총인구_명",text="name")
str(korpopmap1@data$name)
devtools::install_github("cardiomoon/Kormaps")
Seoul2=submap(korpopmap2,"서울")
qtm(Seoul2,"외국인_계_명")
require(leaflet)
myleaflet(korpopmap1,"총인구_명")
require(Kormaps)
myleaflet(korpopmap1,"총인구_명")
myleaflet(korpopmap1,"총인구_명")
library(Kormaps)
myleaflet(korpopmap1,"총인구_명")
myleaflet
kormap1
source('~/ownCloud/Documents/Kormaps/R/myleaflet.R', echo=TRUE)
source('~/ownCloud/Documents/Kormaps/R/Shape.R', echo=TRUE)
myleaflet(korpopmap1,"총인구_명")
myleaflet(korpopmap1,"총인구_명")
source('~/ownCloud/Documents/Kormaps/R/myleaflet.R', echo=TRUE)
myleaflet(korpopmap1,"총인구_명")
korpopmap3@data$name
library(Kormaps)
myleaflet(korpopmap1,"총인구_명")
colnames(korpopmap1@data)
myleaflet(submap(korpopmap3,"제주"),choices=c("남자_명","여자_명","주택_계_호"))
myleaflet(submap(korpopmap3,"광주"),choices=c("남자_명","여자_명","주택_계_호"))
devtools::document()
devtools::document()
library(Kormaps)
myleaflet(korpopmap1,"총인구_명")
require(Kormaps)
require(Kormapsdata)
require(tmap)
qtm(kormap1)
qtm(korpopmap1,"총인구_명",text="name")
colnames(korpopmap1@data)
qtm(korpopmap2,"총인구_명")
Seoul2=submap(korpopmap2,"서울")
require(Kormaps)
Seoul2=submap(korpopmap2,"서울")
?submap
Kormaps:submap
Kormaps:submap
devtools::document()
devtools::document()
library(Kormaps)
devtools::document()
library(Kormaps)
library(Kormaps)
require(Kormaps)
require(Kormapsdata)
require(tmap)
qtm(kormap1)
qtm(korpopmap1,"총인구_명",text="name")
colnames(korpopmap1@data)
Seoul2=submap(korpopmap2,"서울")
Seoul2=submap(korpopmap2,"서울")
submap
devtools::document()
devtools::load_all(".")
Seoul2=submap(korpopmap2,"서울")
install.packages(c("ade4", "assertive.properties", "assertive.reflection", "assertive.sets", "assertive.strings", "deldir", "evaluate", "formatR", "ggplot2", "Matrix", "mgcv", "OpenMx", "RcppEigen", "RCurl", "rgdal", "rgeos", "rvg", "semTools", "V8", "viridis", "XML"))
install.packages(c("deldir", "mgcv", "rgdal", "rgeos", "rvg", "V8"))
devtools::document()
devtools::load_all(".")
devtools::load_all(".")
